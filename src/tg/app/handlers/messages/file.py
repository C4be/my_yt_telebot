from aiogram import Router, F
from aiogram.types import Message, Document
import os
import logging

router = Router()
logger = logging.getLogger(__name__)

# –°–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π —Ñ–∞–π–ª–æ–≤
SUPPORTED_EXTENSIONS = [".txt"]

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã —Å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–º–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏
@router.message(
    (F.document & F.document.file_name.regexp(r'\.txt$')) | 
    (F.forward_from.as_("forwarded") & F.document & F.document.file_name.regexp(r'\.txt$'))
)
async def file_handler(message: Message):
    document: Document = message.document
    file_name = document.file_name
    file_extension = os.path.splitext(file_name)[1].lower()
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–π —ç—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç –∏–ª–∏ –Ω–µ—Ç
    forwarded = "(–ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–π)" if message.forward_from else ""
    
    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
    await message.answer(
        f"üìÑ –§–∞–π–ª –ø–æ–ª—É—á–µ–Ω! {forwarded}\n"
        f"–ò–º—è —Ñ–∞–π–ª–∞: {file_name}\n"
        f"–¢–∏–ø: {document.mime_type}\n"
        f"–†–∞–∑–º–µ—Ä: {document.file_size / 1024:.2f} KB"
    )
    
    # –†–∞–∑–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
    if file_extension == ".txt":
        await message.answer("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª...")
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
        # file = await message.document.download()
        # with open(file.name, 'r', encoding='utf-8') as f:
        #     content = f.read()
        # await message.answer(f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞: {content[:100]}...")
    
    logger.info(f"–ü–æ–ª—É—á–µ–Ω —Ñ–∞–π–ª {file_name} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.username or message.from_user.id}")