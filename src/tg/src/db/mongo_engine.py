from motor.motor_asyncio import AsyncIOMotorClient, AsyncIOMotorDatabase
from collections.abc import AsyncGenerator
from core.config import MONGO_DB_URL, MONGO_DB_NAME

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ –∏ –±–∞–∑—ã
client: AsyncIOMotorClient | None = None
db: AsyncIOMotorDatabase | None = None


async def init_mongo() -> AsyncIOMotorDatabase:
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
    """
    global client, db

    if client is None:
        client = AsyncIOMotorClient(MONGO_DB_URL)
        db = client[MONGO_DB_NAME]
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB: {MONGO_DB_URL}/{MONGO_DB_NAME}")

    return db


async def get_mongo_db() -> AsyncGenerator[AsyncIOMotorDatabase, None]:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB (–∞–Ω–∞–ª–æ–≥ get_db_session)
    """
    if db is None:
        await init_mongo()
    yield db


async def close_mongo():
    """
    –ó–∞–∫—Ä—ã–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MongoDB
    """
    global client
    if client:
        client.close()
        print("üßπ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MongoDB –∑–∞–∫—Ä—ã—Ç–æ")
